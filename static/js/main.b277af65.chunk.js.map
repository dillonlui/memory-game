{"version":3,"sources":["components/Header.js","components/Card.js","components/gameData.js","components/Gameboard.js","App.js","index.js"],"names":["Header","className","Card","props","src","process","data","img","alt","name","gameData","clicked","Gameboard","useState","cardArray","setCardArray","currentScore","setCurrentScore","highScore","setHighScore","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","handleClick","e","index","target","parentNode","attributes","value","tempArray","i","map","val","idx","onClick","data-id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAWeA,EATA,WACX,OACI,sBAAKC,UAAU,SAAf,UACI,oDACA,kH,cCIGC,EARF,SAACC,GACV,OACI,qBAAKF,UAAU,OAAf,SACI,qBAAKG,IAAKC,eAAyBF,EAAMG,KAAKC,IAAKC,IAAKL,EAAMG,KAAKG,UC2ChEC,EAhDA,CACX,CACID,KAAM,YACNF,IAAK,wBACLI,SAAS,GAEb,CACIF,KAAM,SACNF,IAAK,qBACLI,SAAS,GAEb,CACIF,KAAM,YACNF,IAAK,uBACLI,SAAS,GAEb,CACIF,KAAM,eACNF,IAAK,0BACLI,SAAS,GAEb,CACIF,KAAM,YACNF,IAAK,uBACLI,SAAS,GAEb,CACIF,KAAM,YACNF,IAAK,uBACLI,SAAS,GAEb,CACIF,KAAM,SACNF,IAAK,qBACLI,SAAS,GAEb,CACIF,KAAM,iBACNF,IAAK,4BACLI,SAAS,GAEb,CACIF,KAAM,oBACNF,IAAK,yBACLI,SAAS,ICsBFC,EA9DG,WACd,MAAkCC,mBAAS,YAAIH,IAA/C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,mBAAS,GAA/C,mBAAKG,EAAL,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAS,GAAzC,mBAAKK,EAAL,KAAgBC,EAAhB,KAEMC,EAAU,SAACC,GAGb,IAFA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAElB,IAAMD,GAEXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAGzCF,EAAiBD,EAFjBG,GAAgB,GAGhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEvB,OAAOD,GAGLQ,EAAc,SAACC,GACjB,IAAMC,EAAQD,EAAEE,OAAOC,WAAWA,WAAWC,WAAW,GAAGC,MAC3D,IAAiC,IAA7BrB,EAAUiB,GAAOpB,QAAmB,CACpC,IAAIyB,EAAS,YAAOtB,GACpBsB,EAAUL,GAAOpB,SAAWyB,EAAUL,GAAOpB,QAC7CI,EAAaK,EAAQ,YAAIgB,KACzBnB,EAAgBD,GAAgB,GAC5BA,EAAeE,GACfC,EAAaH,OAEd,CACHC,EAAgB,GAEhB,IADA,IAAImB,EAAS,YAAOtB,GACXuB,EAAI,EAAGA,EAAID,EAAUX,OAAQY,IAClCD,EAAUC,GAAG1B,SAAU,EAE3BI,EAAaK,EAAQgB,MAK7B,OACI,gCACI,sBAAKnC,UAAU,iBAAf,UACI,gDAAmBe,KACnB,6CAAgBE,QAEpB,qBAAKjB,UAAU,gBAAf,SAEIa,EAAUwB,KAAI,SAACC,EAAKC,GAChB,OACA,qBAAeC,QAASZ,EAAaa,UAASF,EAA9C,SACI,cAAC,EAAD,CAAMlC,KAAMiC,KADNC,YC1CfG,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b277af65.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Header = () => {\n    return(\n        <div className=\"header\">\n            <h1>Coffee Memory Game</h1>\n            <p>Gain points by clicking on an image, but don't click on the same image twice!</p>\n        </div>\n    )\n}\n\nexport default Header","import React from \"react\"\n\nconst Card = (props) => {\n    return(\n        <div className=\"card\">\n            <img src={process.env.PUBLIC_URL + props.data.img} alt={props.data.name}/>\n        </div>\n    )\n}\n\nexport default Card","let gameData = [\n    {\n        name: \"Aeropress\",\n        img: \"/images/aeropress.jpg\",\n        clicked: false\n    },\n    {\n        name: \"Chemex\",\n        img: \"/images/chemex.jpg\",\n        clicked: false\n    },\n    {\n        name: \"Cold Brew\",\n        img: \"/images/coldBrew.jpg\",\n        clicked: false\n    },\n    {\n        name: \"French Press\",\n        img: \"/images/frenchPress.jpg\",\n        clicked: false\n    },\n    {\n        name: \"Mocha Pot\",\n        img: \"/images/mochaPot.jpg\",\n        clicked: false\n    },\n    {\n        name: \"Pour Over\",\n        img: \"/images/pourOver.jpg\",\n        clicked: false\n    },\n    {\n        name: \"Siphon\",\n        img: \"/images/siphon.jpg\",\n        clicked: false\n    },\n    {\n        name: \"Turkish Coffee\",\n        img: \"/images/turkishCoffee.jpg\",\n        clicked: false\n    },\n    {\n        name: \"Vietnamese Coffee\",\n        img: \"/images/vietnamese.jpg\",\n        clicked: false\n    },\n]\n\nexport default gameData","import React, {useState} from \"react\"\nimport Card from \"./Card\"\nimport gameData from \"./gameData\"\n\nconst Gameboard = () => {\n    const [cardArray, setCardArray] = useState([...gameData])\n    let [currentScore, setCurrentScore] = useState(0)\n    let [highScore, setHighScore] = useState(0)\n    \n    const shuffle = (array) => {\n        let currentIndex = array.length, temporaryValue, randomIndex;\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n        // Pick a remaining element...\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex -= 1;\n        // And swap it with the current element.\n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        }\n        return array;\n    }\n\n    const handleClick = (e) => {\n        const index = e.target.parentNode.parentNode.attributes[0].value\n        if (cardArray[index].clicked === false) {\n            let tempArray = [...cardArray]\n            tempArray[index].clicked = !tempArray[index].clicked\n            setCardArray(shuffle([...tempArray]))\n            setCurrentScore(currentScore += 1)\n            if (currentScore > highScore){\n                setHighScore(currentScore)  \n            }\n        } else {\n            setCurrentScore(0)\n            let tempArray = [...cardArray]\n            for (let i = 0; i < tempArray.length; i++){\n                tempArray[i].clicked = false\n            }\n            setCardArray(shuffle(tempArray))\n        }\n    }\n      \n\n    return(\n        <div>\n            <div className=\"scoreContainer\">\n                <p>Current Score: {currentScore}</p>\n                <p>High Score: {highScore}</p>\n            </div>\n            <div className=\"cardContainer\">\n            {\n                cardArray.map((val, idx) => {\n                    return(\n                    <div key={idx} onClick={handleClick} data-id={idx}>\n                        <Card data={val} />\n                    </div>\n                    )\n                })\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default Gameboard","import React from \"react\"\nimport Header from \"./components/Header\"\nimport Gameboard from \"./components/Gameboard\"\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Gameboard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}